{"version":3,"sources":["ridewatch/test.png","ridewatch/English-logo.png","ridewatch/Japanese-logo.png","serviceWorker.js","components/Ridewatch.jsx","components/RidewatchList.jsx","Checklist.jsx","MainRoutes.jsx","Search.jsx","Sidebar.jsx","components/Header.jsx","components/Footer.jsx","indexRoutes.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Ridewatch","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Checked","checked","imgsrc","alt","identity","series","onClick","bind","assertThisInitialized","inherits","createClass","key","value","tempIdentity","localStorage","getItem","setState","removeItem","setItem","react_default","a","createElement","id","className","src","Component","RidewatchList","watchJson","allChecked","Collapsed","_this2","tempWatchUrlArray","tempWatchNameArray","katakana","i","length","push","imagesource","n","name","tempRidewatches","t","map","watch","components_Ridewatch","ridewatchClick","ridewatchMaker","Checklist","components_RidewatchList","ridewatchJson","zio","build","exaid","ghost","drive","gaim","wizard","fourze","ooo","w","decade","kiva","deno","kabuto","hibiki","blade","faiz","ryuki","agito","kuuga","another","misc","mainRoutes","path","icon","component","redirect","to","Sidebar","width","innerWidth","sidebarBackground","backgroundImage","imagine","data-color","data-image","style","height","logo","languageClick","prop","react_router_dom","activeClassName","Header","Footer","indexRoutes","App","language","EnglishLogo","JapaneseLogo","src_Sidebar_0","assign","ref","components_Header","react_router","from","render","src_Checklist","components_Footer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f19bd64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.862cf77f.png\";","module.exports = __webpack_public_path__ + \"static/media/English-logo.ec6ffb09.png\";","module.exports = __webpack_public_path__ + \"static/media/Japanese-logo.ccef89ea.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\n\r\nexport class Ridewatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Checked: this.props.checked,\r\n      imgsrc: this.props.imgsrc,\r\n      alt: this.props.alt,\r\n      identity: this.props.identity,\r\n      series: this.props.series\r\n    };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    var tempIdentity = this.props.imgsrc;\r\n    if (localStorage.getItem(tempIdentity)) {\r\n      this.setState({\r\n        Checked: \"true-\" + this.state.series\r\n      });\r\n    } else {\r\n      this.setState({\r\n        Checked: \"false\"\r\n      });\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n    var tempIdentity = this.props.imgsrc;\r\n\r\n    if (localStorage.getItem(tempIdentity)) {\r\n      this.setState({\r\n        Checked: \"false\"\r\n      });\r\n      localStorage.removeItem(tempIdentity);\r\n    } else {\r\n      localStorage.setItem(tempIdentity, \"owned\");\r\n      this.setState({\r\n        Checked: \"true-\" + this.state.series\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"ridewatch\">\r\n        <button className={this.state.Checked} onClick={this.onClick}>\r\n          <img src={this.state.imgsrc} alt={this.state.alt} />\r\n        </button>\r\n        <p>{this.state.identity}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ridewatch;\r\n","import React, { Component } from \"react\";\r\nimport Ridewatch from \"./Ridewatch\";\r\n\r\nexport class RidewatchList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      series: this.props.series,\r\n      imgsrc: this.props.imgsrc,\r\n      watchJson: this.props.watchJson,\r\n      allChecked: false,\r\n      Collapsed: false,\r\n      Checked: \"false\"\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  onClick() {\r\n    if (this.state.Collapsed === false) {\r\n      this.setState({\r\n        Collapsed: true,\r\n        series: this.props.series + \"-closed\",\r\n        imgsrc: [\".png\"]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        Collapsed: false,\r\n        series: this.props.series,\r\n        watchJson: this.props.watchJson,\r\n        imgsrc: this.props.imgsrc\r\n      });\r\n    }\r\n  }\r\n\r\n  ridewatchMaker() {\r\n    var tempWatchUrlArray = [];\r\n    var tempWatchNameArray = [];\r\n    if (this.props.katakana === true) {\r\n      for (var i = 0; i < this.state.watchJson.length; i++) {\r\n        tempWatchUrlArray.push(this.state.watchJson[i].imagesource);\r\n        tempWatchNameArray.push(this.state.watchJson[i].katakana);\r\n      }\r\n    } else {\r\n      for (var n = 0; n < this.state.watchJson.length; n++) {\r\n        tempWatchUrlArray.push(this.state.watchJson[n].imagesource);\r\n        tempWatchNameArray.push(this.state.watchJson[n].name);\r\n      }\r\n    }\r\n    var tempRidewatches = [];\r\n    for (var t = 0; t < tempWatchUrlArray.length; t++) {\r\n      tempRidewatches.push([tempWatchUrlArray[t], tempWatchNameArray[t]]);\r\n    }\r\n\r\n    let ridewatches = tempRidewatches.map(watch => {\r\n      return (\r\n        <li>\r\n          <Ridewatch\r\n            imgsrc={watch[0]}\r\n            alt={watch[1]}\r\n            identity={watch[1]}\r\n            key={watch[1]}\r\n            series={this.state.series}\r\n            onClick={this.props.ridewatchClick}\r\n            checked={this.state.Checked}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    return ridewatches;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.Collapsed === true) {\r\n      return (\r\n        <div className={this.state.series + \"-div\"}>\r\n          <h1 onClick={this.onClick} className={this.state.series}>\r\n            <i id={this.state.series + \"-header\"} />\r\n            {this.state.series}\r\n          </h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={this.state.series + \"-background\"}>\r\n          <div className={this.state.series + \"-div\"}>\r\n            <h1\r\n              id={this.state.series + \"-header\"}\r\n              onClick={this.onClick}\r\n              className={this.state.series + \"-open\"}\r\n            >\r\n              <i id={this.state.series + \"-header\"} />\r\n              {this.state.series}\r\n            </h1>\r\n            <ul className={this.state.series}>{this.ridewatchMaker()}</ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RidewatchList;\r\n","import React, { Component } from \"react\";\r\nimport RidewatchList from \"./components/RidewatchList.jsx\";\r\nimport ridewatchJson from \"./ridewatchdata.json\";\r\n\r\nclass Checklist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RidewatchList\r\n          series={\"zio\"}\r\n          watchJson={ridewatchJson.series.zio}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"build\"}\r\n          watchJson={ridewatchJson.series.build}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n          \r\n        />\r\n        <RidewatchList\r\n          series={\"exaid\"}\r\n          watchJson={ridewatchJson.series.exaid}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ghost\"}\r\n          watchJson={ridewatchJson.series.ghost}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"drive\"}\r\n          watchJson={ridewatchJson.series.drive}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"gaim\"}\r\n          watchJson={ridewatchJson.series.gaim}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"wizard\"}\r\n          watchJson={ridewatchJson.series.wizard}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"fourze\"}\r\n          watchJson={ridewatchJson.series.fourze}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ooo\"}\r\n          watchJson={ridewatchJson.series.ooo}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"w\"}\r\n          watchJson={ridewatchJson.series.w}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"decade\"}\r\n          watchJson={ridewatchJson.series.decade}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kiva\"}\r\n          watchJson={ridewatchJson.series.kiva}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"deno\"}\r\n          watchJson={ridewatchJson.series.deno}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kabuto\"}\r\n          watchJson={ridewatchJson.series.kabuto}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"hibiki\"}\r\n          watchJson={ridewatchJson.series.hibiki}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"blade\"}\r\n          watchJson={ridewatchJson.series.blade}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"faiz\"}\r\n          watchJson={ridewatchJson.series.faiz}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ryuki\"}\r\n          watchJson={ridewatchJson.series.ryuki}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"agito\"}\r\n          watchJson={ridewatchJson.series.agito}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kuuga\"}\r\n          watchJson={ridewatchJson.series.kuuga}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"another\"}\r\n          watchJson={ridewatchJson.series.another}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"misc\"}\r\n          watchJson={ridewatchJson.series.misc}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checklist;\r\n","import Checklist from \"./Checklist\";\r\nimport Search from \"./Search\";\r\n\r\nconst mainRoutes = [\r\n  {\r\n    path: \"/checklist\",\r\n    name: \"Checklist\",\r\n    icon: \"checklist-icon\",\r\n    component: Checklist\r\n  },\r\n\r\n  {/*\r\n    path: \"/search\",\r\n    name: \"Search\",\r\n    icon: \"search-icon\",\r\n    component: Search\r\n  */},\r\n  { redirect: true, path: \"/\", to: \"/checklist\", name: \"Checklist\" }\r\n];\r\n\r\nexport default mainRoutes;\r\n","import React, { Component } from \"react\";\r\nimport ridewatchJson from \"./ridewatchdata.json\";\r\nimport Ridewatch from \"./components/Ridewatch\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      katakana: this.props.katakana,\r\n      watchJson: ridewatchJson\r\n    };\r\n  }\r\n\r\n  ridewatchMaker() {\r\n    var tempWatchUrlArray = [];\r\n    var tempWatchNameArray = [];\r\n    if (this.props.katakana === true) {\r\n      for (var i = 0; i < this.state.watchJson.length; i++) {\r\n        tempWatchUrlArray.push(this.state.watchJson[i].imagesource);\r\n        tempWatchNameArray.push(this.state.watchJson[i].katakana);\r\n      }\r\n    } else {\r\n      for (var n = 0; n < this.state.watchJson.length; n++) {\r\n        tempWatchUrlArray.push(this.state.watchJson[n].imagesource);\r\n        tempWatchNameArray.push(this.state.watchJson[n].name);\r\n      }\r\n    }\r\n    var tempRidewatches = [];\r\n    for (var t = 0; t < tempWatchUrlArray.length; t++) {\r\n      tempRidewatches.push([tempWatchUrlArray[t], tempWatchNameArray[t]]);\r\n    }\r\n\r\n    let ridewatches = tempRidewatches.map(watch => {\r\n      return (\r\n        <li>\r\n          <Ridewatch\r\n            imgsrc={watch[0]}\r\n            alt={watch[1]}\r\n            identity={watch[1]}\r\n            key={watch[1]}\r\n            series={this.state.series}\r\n            onClick={this.props.ridewatchClick}\r\n            checked={this.state.Checked}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    return ridewatches;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.series + \"-div\"}>\r\n        <h1 onClick={this.onClick} className={\"search-header\"}>\r\n          Search\r\n        </h1>\r\n        <ul className={this.state.series}>{this.ridewatchMaker()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport imagine from \"./ridewatch/test.png\";\r\nimport mainRoutes from \"./MainRoutes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n  render() {\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + imagine + \")\"\r\n    };\r\n\r\n    return (\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color=\"black\"\r\n        data-image={imagine}\r\n      >\r\n        <div className=\"sidebar-background\" style={sidebarBackground} />\r\n        <div style={{ height: 105 }} className=\"logo\">\r\n          <div>\r\n            <img\r\n              src={this.props.logo}\r\n              height={90}\r\n              alt=\"logo_image\"\r\n              onClick={this.props.languageClick}\r\n            />\r\n            {/*<button id=\"japaneseSwitch\" onClick={this.props.languageClick}>\r\n                {this.props.language}\r\n    </button>*/}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              {mainRoutes.map((prop, key) => {\r\n                if (!prop.redirect)\r\n                  return (\r\n                    <li className={\"sidebar-list-item\"} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import App from \"./App\";\r\n\r\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: App }];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport mainRoutes from \"./MainRoutes\";\r\nimport Sidebar from \"./Sidebar.jsx\";\r\nimport Header from \"./components/Header.jsx\";\r\nimport Footer from \"./components/Footer.jsx\";\r\nimport \"./App.css\";\r\nimport Checklist from \"./Checklist\";\r\nimport JapaneseLogo from \"./ridewatch/Japanese-logo.png\";\r\nimport EnglishLogo from \"./ridewatch/English-logo.png\";\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      katakana: false,\r\n      language: \"English\",\r\n      logo: EnglishLogo\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    if (this.state.katakana === false) {\r\n      this.setState({\r\n        katakana: true,\r\n        language: \"Japanese\",\r\n        logo: JapaneseLogo\r\n      });\r\n    } else {\r\n      this.setState({\r\n        katakana: false,\r\n        language: \"English\",\r\n        logo: EnglishLogo\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Sidebar\r\n          {...this.props}\r\n          katakana={this.state.katakana}\r\n          languageClick={this.onClick}\r\n          logo={this.state.logo}\r\n        />\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <Header {...this.props} />\r\n          <Switch>\r\n            {mainRoutes.map((prop, key) => {\r\n              if (prop.redirect)\r\n                return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n              return (\r\n                <Route\r\n                  path={prop.path}\r\n                  key={key}\r\n                  render={props => (\r\n                    <Checklist\r\n                      {...props}\r\n                      katakana={this.state.katakana}\r\n                    />\r\n                  )}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport indexRoutes from \"./indexRoutes.jsx\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Switch>\r\n      {indexRoutes.map((prop, key) => {\r\n        return <Route to={prop.path} component={prop.component} key={key} />;\r\n      })}\r\n    </Switch>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}