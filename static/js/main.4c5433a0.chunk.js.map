{"version":3,"sources":["serviceWorker.js","components/Ridewatch.jsx","components/RidewatchList.jsx","Checklist.jsx","Search.jsx","MainRoutes.jsx","ridewatch/test.png","Sidebar.jsx","components/Header.jsx","components/Footer.jsx","ridewatch/Japanese-logo.png","ridewatch/ZioEnglishLogo.png","indexRoutes.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Ridewatch","props","state","Checked","onClick","bind","tempIdentity","this","id","localStorage","getItem","setState","series","removeItem","setItem","ridewatchClick","className","src","imgsrc","alt","identity","year","Component","RidewatchList","allChecked","Collapsed","watchJson","watch","map","imagesource","name","katakana","checked","ridewatchMaker","Checklist","ridewatchJson","Search","searchResult","displayWatches","primaryColorSearch","secondaryColorSearch","DX","nameSearch","ownedSearch","ridewatchSearcher","searchClick","event","value","target","a","filteredList","filter","primaryColor","secondaryColor","finalWatchArray","onChange","handleOwnedChange","placeholder","handleNamedChange","handlePrimaryChange","handleSecondaryChange","handleDXChange","mainRoutes","path","icon","component","page","redirect","to","Sidebar","width","innerWidth","sidebarBackground","backgroundImage","imagine","style","height","logo","languageClick","prop","key","activeClassName","totalOwned","Header","Footer","indexRoutes","language","EnglishLogo","JapaneseLogo","length","toString","ref","from","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uquCAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sECwCSC,EAxDf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,SAGX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBANE,EADrB,sDAUE,WACE,IAAIC,EAAeC,KAAKN,MAAMO,GAC1BC,aAAaC,QAAQJ,GACvBC,KAAKI,SAAS,CACZR,QAAS,QAAUI,KAAKN,MAAMW,SAGhCL,KAAKI,SAAS,CACZR,QAAS,YAlBjB,qBAuBE,WACE,IAAIG,EAAeC,KAAKN,MAAMO,GAE1BC,aAAaC,QAAQJ,IACvBC,KAAKI,SAAS,CACZR,QAAS,UAEXM,aAAaI,WAAWP,KAExBG,aAAaK,QAAQR,EAAcA,GACnCC,KAAKI,SAAS,CACZR,QAAS,QAAUI,KAAKN,MAAMW,UAIlCL,KAAKN,MAAMc,mBAtCf,oBAyCE,WACE,OACE,sBAAKP,GAAG,YAAR,UACE,wBAAQQ,UAAWT,KAAKL,MAAMC,QAASC,QAASG,KAAKH,QAArD,SACE,qBAAKa,IAAKV,KAAKN,MAAMiB,OAAQC,IAAKZ,KAAKN,MAAMkB,QAE/C,8BACGZ,KAAKN,MAAMmB,SACZ,uBAFF,IAEUb,KAAKN,MAAMoB,eAjD7B,GAA+BC,aCiFhBC,EAhFf,kDACE,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXgB,OAAQ,EAAKjB,MAAMiB,OACnBM,YAAY,EACZC,WAAW,EACXtB,QAAS,SAEX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBARE,EADrB,2CAWE,YAC+B,IAAzBE,KAAKL,MAAMuB,UACblB,KAAKI,SAAS,CACZc,WAAW,EACXb,OAAQL,KAAKN,MAAMW,OAAS,UAC5BM,OAAQ,CAAC,UAGXX,KAAKI,SAAS,CACZc,WAAW,EACXb,OAAQL,KAAKN,MAAMW,OACnBM,OAAQX,KAAKN,MAAMiB,WAtB3B,4BA2BE,WAAkB,IAAD,OAoBf,OAnBkBX,KAAKN,MAAMyB,UAAUC,MAAMC,KAAI,SAAAD,GAC/C,GAAIA,EAAMf,SAAW,EAAKX,MAAMW,OAC9B,OACE,6BACE,cAAC,EAAD,CACEM,OAAQS,EAAME,YACdV,IAAKQ,EAAMG,KACXV,SAAU,EAAKnB,MAAM8B,SAAWJ,EAAMI,SAAWJ,EAAMG,KACvDT,KAAMM,EAAMN,KACZb,GAAImB,EAAMnB,GAEVI,OAAQe,EAAMf,OACdoB,QAAS,EAAK9B,MAAMC,QACpBY,eAAgB,EAAKd,MAAMc,gBAHtBY,EAAMnB,WAtCzB,oBAkDE,WACE,OAA6B,IAAzBD,KAAKL,MAAMuB,UAEX,qBAAKT,UAAWT,KAAKL,MAAMU,OAAS,OAApC,SACE,qBAAIR,QAASG,KAAKH,QAASY,UAAWT,KAAKL,MAAMU,OAAjD,UACE,mBAAGJ,GAAID,KAAKL,MAAMU,OAAS,YAC1BL,KAAKL,MAAMU,YAMhB,qBAAKI,UAAWT,KAAKN,MAAMW,OAAS,cAApC,SACE,sBAAKI,UAAWT,KAAKN,MAAMW,OAAS,OAApC,UACE,qBACEJ,GAAID,KAAKN,MAAMW,OAAS,UACxBR,QAASG,KAAKH,QACdY,UAAWT,KAAKN,MAAMW,OAAS,QAHjC,UAKE,mBAAGJ,GAAID,KAAKN,MAAMW,OAAS,YAC1BL,KAAKN,MAAMW,UAEd,oBAAII,UAAWT,KAAKN,MAAMW,OAA1B,SAAmCL,KAAK0B,4BAxEpD,GAAmCX,a,OCkJpBY,E,kDAhJb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAInB,WACE,OACE,gCACE,cAAC,EAAD,CACEU,OAAQ,MACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,OACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,SACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,SACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,MACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,IACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,SACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,OACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,OACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,SACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,SACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,OACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,QACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,UACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,iBAE7B,cAAC,EAAD,CACEH,OAAQ,OACRc,UAAWS,EACXJ,SAAUxB,KAAKN,MAAM8B,SACrBhB,eAAgBR,KAAKN,MAAMc,wB,GA1IbO,aCAlBc,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,QACTkC,aAAc,GACdC,eAAgB,KAChBC,mBAAoB,MACpBC,qBAAsB,MACtBC,GAAI,KACJC,WAAY,GACZC,YAAa,OAGf,EAAKC,kBAAoB,EAAKA,kBAAkBvC,KAAvB,gBAEzB,EAAKwC,YAAc,EAAKA,YAAYxC,KAAjB,gBAfF,E,uDAkBnB,SAAoByC,GAClB,IAAIC,EAAQD,EAAME,OAAOD,MACzBxC,KAAKI,SAAS,CACZ4B,mBAAoBQ,M,mCAIxB,SAAsBD,GACpB,IAAIC,EAAQD,EAAME,OAAOD,MACzBxC,KAAKI,SAAS,CACZ6B,qBAAsBO,M,+BAI1B,SAAkBD,GAChB,IAAIC,EAAQD,EAAME,OAAOD,MACzBxC,KAAKI,SAAS,CACZgC,YAAaI,M,4BAIjB,SAAeD,GACb,IAAIC,EAAQD,EAAME,OAAOD,MACX,SAAVA,EACFxC,KAAKI,SAAS,CACZ8B,GAAI,OAEa,SAAVM,EACTxC,KAAKI,SAAS,CACZ8B,IAAI,IAEa,UAAVM,GACTxC,KAAKI,SAAS,CACZ8B,IAAI,M,+BAKV,SAAkBK,GAChB,IAAIC,EAAQD,EAAME,OAAOD,MACzBxC,KAAKI,SAAS,CACZ+B,WAAYK,M,yBAIhB,WAAe,IAETE,EAFQ,OACRC,EAAef,EAAcR,MAEF,QAA3BpB,KAAKL,MAAMyC,cAEXO,EAD6B,UAA3B3C,KAAKL,MAAMyC,YACEO,EAAaC,QAAO,SAAAxB,GAEjC,OADAsB,EAAIxC,aAAaC,QAAQiB,EAAMnB,IACxBmB,EAAMnB,KAAOyC,KAGPC,EAAaC,QAAO,SAAAxB,GACjC,OAAOA,EAAMnB,KAAOC,aAAaC,QAAQiB,EAAMnB,QAIvB,KAA1BD,KAAKL,MAAMwC,aACbQ,EAAeA,EAAaC,QAAO,SAAAxB,GACjC,OAAOA,EAAMG,OAAS,EAAK5B,MAAMwC,eAGC,QAAlCnC,KAAKL,MAAMqC,qBACbW,EAAeA,EAAaC,QAAO,SAAAxB,GACjC,OAAOA,EAAMyB,eAAiB,EAAKlD,MAAMqC,uBAGL,QAApChC,KAAKL,MAAMsC,uBACbU,EAAeA,EAAaC,QAAO,SAAAxB,GACjC,OAAOA,EAAM0B,iBAAmB,EAAKnD,MAAMsC,yBAGzB,OAAlBjC,KAAKL,MAAMuC,KACbS,EAAeA,EAAaC,QAAO,SAAAxB,GACjC,OAAOA,EAAMc,KAAO,EAAKvC,MAAMuC,OAsBnC,IAAIa,EAAkBJ,EAAatB,KAAI,SAAAD,GACrC,OACE,6BACE,cAAC,EAAD,CACET,OAAQS,EAAME,YACdV,IAAKQ,EAAMG,KACXV,SAAU,EAAKnB,MAAM8B,SAAWJ,EAAMI,SAAWJ,EAAMG,KACvDT,KAAMM,EAAMN,KACZb,GAAImB,EAAMnB,GAEVI,OAAQe,EAAMf,OACdoB,QAAS,EAAK9B,MAAMC,QACpBY,eAAgB,EAAKd,MAAMc,gBAHtBY,EAAMnB,SAQnBD,KAAKI,SAAS,CAAE2B,eAAgBgB,M,+BAGlC,WAEE,OADkB/C,KAAKL,MAAMmC,e,oBAI/B,WACE,OACE,sBAAKrB,UAAWT,KAAKL,MAAMU,OAAS,OAApC,UACE,oBAAIR,QAASG,KAAKH,QAASY,UAAW,gBAAtC,oBAGA,sBAAKA,UAAU,uBAAf,kBAEE,yBACEc,KAAK,QACLtB,GAAG,cACHQ,UAAU,gBACVuC,SAAUhD,KAAKiD,kBAAkBnD,KAAKE,MAJxC,UAME,wBAAQwC,MAAM,MAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,0BAEF,0BACEvC,GAAG,YACHiD,YAAY,aACZF,SAAUhD,KAAKmD,kBAAkBrD,KAAKE,QAf1C,iBAkBE,yBACEuB,KAAK,UACLtB,GAAG,qBACHQ,UAAU,gBACVuC,SAAUhD,KAAKoD,oBAAoBtD,KAAKE,MAJ1C,UAME,wBAAQwC,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,wBAxCJ,mBA2CE,yBACEjB,KAAK,YACLtB,GAAG,uBACHQ,UAAU,gBACVuC,SAAUhD,KAAKqD,sBAAsBvD,KAAKE,MAJ5C,UAME,wBAAQwC,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAlEJ,KAqEE,yBACEjB,KAAK,KACLtB,GAAG,WACHQ,UAAU,gBACVuC,SAAUhD,KAAKsD,eAAexD,KAAKE,MAJrC,UAME,wBAAQwC,MAAO,KAAf,kBACA,wBAAQA,OAAO,EAAf,gBACA,wBAAQA,OAAO,EAAf,mBAEF,wBAAQvC,GAAG,eAAeJ,QAASG,KAAKsC,YAAYxC,KAAKE,MAAzD,uBAIF,qBAAKS,UAAW,oBAAhB,SACE,qBAAKA,UAAWT,KAAKL,MAAMU,OAAS,OAApC,SACE,oBAAII,UAAU,aAAd,SAA4BT,KAAKL,MAAMoC,4B,GA1O9BhB,aCkBNwC,EAnBI,CACjB,CACEC,KAAM,aACNjC,KAAM,YACNkC,KAAM,iBACNC,UAAW/B,EACXgC,KAAMhC,GAGR,CACE6B,KAAM,UACNjC,KAAM,SACNkC,KAAM,cACNC,UDsOW7B,ECrOX8B,KDqOW9B,GCnOb,CAAE+B,UAAU,EAAMJ,KAAM,IAAKK,GAAI,aAActC,KAAM,cCnBxC,MAA0B,iCCmE1BuC,G,wDA5Db,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoE,MAAO1E,OAAO2E,YAHC,E,0CAOnB,WACE,IAAMC,EAAoB,CACxBC,gBAAiB,OAASC,EAAU,KAGtC,OACE,sBACElE,GAAG,UACHQ,UAAU,UACV,aAAW,QACX,aAAY0D,EAJd,UAME,qBAAK1D,UAAU,qBAAqB2D,MAAOH,IAC3C,qBAAKG,MAAO,CAAEC,OAAQ,KAAO5D,UAAU,OAAvC,SACE,8BACE,qBACEC,IAAKV,KAAKN,MAAM4E,KAChBD,OAAQ,GACRzD,IAAI,aACJf,QAASG,KAAKN,MAAM6E,oBAI1B,8BACE,sBAAK9D,UAAU,kBAAf,UACE,oBAAIA,UAAU,MAAd,SACG8C,EAAWlC,KAAI,SAACmD,EAAMC,GACrB,OAAKD,EAAKZ,SAaH,KAXH,oBAAInD,UAAW,oBAAf,SACE,eAAC,IAAD,CACEoD,GAAIW,EAAKhB,KACT/C,UAAU,WACViE,gBAAgB,SAHlB,UAKE,mBAAGjE,UAAW+D,EAAKf,OACnB,4BAAIe,EAAKjD,WAP4BkD,QAcjD,8BACE,oBAAGxE,GAAG,YAAN,0BAAgCD,KAAKN,MAAMiF,WAA3C,wB,GApDQ5D,cCMP6D,E,kDATb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAInB,WACE,OAAO,4B,GANUoB,aCUN8D,E,kDATb,WAAYnF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAInB,WACE,OAAO,4B,GANUoB,aCFN,G,MAAA,IAA0B,2CCA1B,MAA0B,2CCI1B+D,EAFG,CAAC,CAAEtB,KAAM,IAAKjC,KAAM,OAAQmC,UCQ9C,kDACE,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX6B,UAAU,EACVuD,SAAU,UACVT,KAAMU,EACNL,WAAY,IAEd,EAAKJ,cAAgB,EAAKA,cAAczE,KAAnB,gBARJ,EADrB,iDAYE,YAC8B,IAAxBE,KAAKL,MAAM6B,SACbxB,KAAKI,SAAS,CACZoB,UAAU,EACVuD,SAAU,WACVT,KAAMW,IAGRjF,KAAKI,SAAS,CACZoB,UAAU,EACVuD,SAAU,UACVT,KAAMU,MAvBd,gCA4BE,WACEhF,KAAKI,SAAS,CAAEuE,WAAYzE,aAAagF,OAAOC,eA7BpD,4BAgCE,WACEnF,KAAKI,SAAS,CAAEuE,WAAYzE,aAAagF,OAAOC,eAjCpD,oBAoCE,WAAU,IAAD,OACP,OACE,sBAAK1E,UAAU,MAAf,UACE,cAAC,EAAD,2BACMT,KAAKN,OADX,IAEE8B,SAAUxB,KAAKL,MAAM6B,SACrB+C,cAAevE,KAAKuE,cACpBD,KAAMtE,KAAKL,MAAM2E,KACjBK,WAAY3E,KAAKL,MAAMgF,cAEzB,sBAAK1E,GAAG,aAAaQ,UAAU,aAAa2E,IAAI,YAAhD,UACE,cAAC,EAAD,eAAYpF,KAAKN,QACjB,cAAC,IAAD,UACG6D,EAAWlC,KAAI,SAACmD,EAAMC,GACrB,OAAID,EAAKZ,SACA,cAAC,IAAD,CAAUyB,KAAMb,EAAKhB,KAAMK,GAAIW,EAAKX,IAASY,GAEpD,cAAC,IAAD,CACEjB,KAAMgB,EAAKhB,KAEX8B,OAAQ,SAAA5F,GAAK,OACX,cAAC8E,EAAKb,KAAN,2BACMjE,GADN,IAEE8B,SAAU,EAAK7B,MAAM6B,SACrBhB,eAAgB,EAAKA,eAAeV,KAAK,QALxC2E,QAYb,cAAC,EAAD,cAnEV,GAAyB1D,eCDzBwE,IAASD,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACGR,EAAYzD,KAAI,SAACmD,EAAMC,GACtB,OAAO,cAAC,IAAD,CAAOZ,GAAIW,EAAKhB,KAAME,UAAWc,EAAKd,WAAgBe,UAInEe,SAASC,eAAe,SdgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4c5433a0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Ridewatch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Checked: \"false\"\r\n    };\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n/*this function (and the Checked state altogether) is only for changing the background css of ridewatches*/\r\n  componentWillMount() {\r\n    var tempIdentity = this.props.id;\r\n    if (localStorage.getItem(tempIdentity)) {\r\n      this.setState({\r\n        Checked: \"true-\" + this.props.series\r\n      });\r\n    } else {\r\n      this.setState({\r\n        Checked: \"false\"\r\n      });\r\n    }\r\n  }\r\n/*when you click, grab the id and use it to mark the watch as owned in local storage, and change background*/\r\n  onClick() {\r\n    var tempIdentity = this.props.id;\r\n\r\n    if (localStorage.getItem(tempIdentity)) {\r\n      this.setState({\r\n        Checked: \"false\"\r\n      });\r\n      localStorage.removeItem(tempIdentity);\r\n    } else {\r\n      localStorage.setItem(tempIdentity, tempIdentity);\r\n      this.setState({\r\n        Checked: \"true-\" + this.props.series\r\n      });\r\n    }\r\n    \r\n    this.props.ridewatchClick();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"ridewatch\">\r\n        <button className={this.state.Checked} onClick={this.onClick}>\r\n          <img src={this.props.imgsrc} alt={this.props.alt} />\r\n        </button>\r\n        <p>\r\n          {this.props.identity}\r\n          <br /> {this.props.year}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ridewatch;\r\n","import React, { Component } from \"react\";\r\nimport Ridewatch from \"./Ridewatch\";\r\n\r\nexport class RidewatchList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imgsrc: this.props.imgsrc,\r\n      allChecked: false,\r\n      Collapsed: false,\r\n      Checked: \"false\"\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  onClick() {\r\n    if (this.state.Collapsed === false) {\r\n      this.setState({\r\n        Collapsed: true,\r\n        series: this.props.series + \"-closed\",\r\n        imgsrc: [\".png\"]\r\n      });\r\n    } else {\r\n      this.setState({\r\n        Collapsed: false,\r\n        series: this.props.series,\r\n        imgsrc: this.props.imgsrc\r\n      });\r\n    }\r\n  }\r\n\r\n  ridewatchMaker() {\r\n    let ridewatches = this.props.watchJson.watch.map(watch => {\r\n      if (watch.series === this.props.series) {\r\n        return (\r\n          <li>\r\n            <Ridewatch\r\n              imgsrc={watch.imagesource}\r\n              alt={watch.name}\r\n              identity={this.props.katakana ? watch.katakana : watch.name}\r\n              year={watch.year}\r\n              id={watch.id}\r\n              key={watch.id}\r\n              series={watch.series}\r\n              checked={this.state.Checked}\r\n              ridewatchClick={this.props.ridewatchClick}\r\n            />\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n    return ridewatches;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.Collapsed === true) {\r\n      return (\r\n        <div className={this.state.series + \"-div\"}>\r\n          <h1 onClick={this.onClick} className={this.state.series}>\r\n            <i id={this.state.series + \"-header\"} />\r\n            {this.state.series}\r\n          </h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={this.props.series + \"-background\"}>\r\n          <div className={this.props.series + \"-div\"}>\r\n            <h1\r\n              id={this.props.series + \"-header\"}\r\n              onClick={this.onClick}\r\n              className={this.props.series + \"-open\"}\r\n            >\r\n              <i id={this.props.series + \"-header\"} />\r\n              {this.props.series}\r\n            </h1>\r\n            <ul className={this.props.series}>{this.ridewatchMaker()}</ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default RidewatchList;\r\n","import React, { Component } from \"react\";\r\nimport RidewatchList from \"./components/RidewatchList.jsx\";\r\nimport ridewatchJson from \"./ridewatchdata.json\";\r\n\r\nclass Checklist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RidewatchList\r\n          series={\"zio\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"build\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"exaid\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ghost\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"drive\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"gaim\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"wizard\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"fourze\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ooo\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"w\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"decade\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kiva\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"deno\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kabuto\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"hibiki\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"blade\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"faiz\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"ryuki\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"agito\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"kuuga\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"another\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n        <RidewatchList\r\n          series={\"misc\"}\r\n          watchJson={ridewatchJson}\r\n          katakana={this.props.katakana}\r\n          ridewatchClick={this.props.ridewatchClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checklist;\r\n","import React, { Component } from \"react\";\r\nimport ridewatchJson from \"./ridewatchdata.json\";\r\nimport Ridewatch from \"./components/Ridewatch\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Checked: \"false\",\r\n      searchResult: [],\r\n      displayWatches: null,\r\n      primaryColorSearch: \"all\",\r\n      secondaryColorSearch: \"all\",\r\n      DX: null,\r\n      nameSearch: \"\",\r\n      ownedSearch: \"all\"\r\n    };\r\n\r\n    this.ridewatchSearcher = this.ridewatchSearcher.bind(this);\r\n\r\n    this.searchClick = this.searchClick.bind(this);\r\n  }\r\n\r\n  handlePrimaryChange(event) {\r\n    let value = event.target.value;\r\n    this.setState({\r\n      primaryColorSearch: value\r\n    });\r\n  }\r\n\r\n  handleSecondaryChange(event) {\r\n    let value = event.target.value;\r\n    this.setState({\r\n      secondaryColorSearch: value\r\n    });\r\n  }\r\n\r\n  handleOwnedChange(event) {\r\n    let value = event.target.value;\r\n    this.setState({\r\n      ownedSearch: value\r\n    });\r\n  }\r\n\r\n  handleDXChange(event) {\r\n    let value = event.target.value;\r\n    if (value === \"both\") {\r\n      this.setState({\r\n        DX: null\r\n      });\r\n    } else if (value === \"true\") {\r\n      this.setState({\r\n        DX: true\r\n      });\r\n    } else if (value === \"false\") {\r\n      this.setState({\r\n        DX: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleNamedChange(event) {\r\n    let value = event.target.value;\r\n    this.setState({\r\n      nameSearch: value\r\n    });\r\n  }\r\n\r\n  searchClick() {\r\n    var filteredList = ridewatchJson.watch;\r\n    let a;\r\n    if (this.state.ownedSearch !== \"all\") {\r\n      if (this.state.ownedSearch === \"owned\") {\r\n        filteredList = filteredList.filter(watch => {\r\n          a = localStorage.getItem(watch.id)\r\n          return watch.id === a;\r\n        });\r\n      } else {\r\n        filteredList = filteredList.filter(watch => {\r\n          return watch.id !== localStorage.getItem(watch.id);\r\n        });\r\n      }\r\n    }\r\n    if (this.state.nameSearch !== \"\") {\r\n      filteredList = filteredList.filter(watch => {\r\n        return watch.name === this.state.nameSearch;\r\n      });\r\n    }\r\n    if (this.state.primaryColorSearch !== \"all\") {\r\n      filteredList = filteredList.filter(watch => {\r\n        return watch.primaryColor === this.state.primaryColorSearch;\r\n      });\r\n    }\r\n    if (this.state.secondaryColorSearch !== \"all\") {\r\n      filteredList = filteredList.filter(watch => {\r\n        return watch.secondaryColor === this.state.secondaryColorSearch;\r\n      });\r\n    }\r\n    if (this.state.DX !== null) {\r\n      filteredList = filteredList.filter(watch => {\r\n        return watch.DX === this.state.DX;\r\n      });\r\n    }\r\n\r\n    /*let tempWatchArray = [];\r\n\r\n    if (this.state.nameSearch !== \"\") {\r\n      ridewatchJson.watch.map(watch => {\r\n        if (watch.name === this.state.nameSearch) {\r\n          tempWatchArray.push(watch);\r\n        }\r\n      });\r\n    }\r\n    if (tempWatchArray[1]) {\r\n      if (this.state.primaryColorSearch !== \"all\") {\r\n        tempWatchArray.map(watch => {\r\n          if (watch.primaryColor !== this.state.primaryColorSearch) {\r\n            tempWatchArray.pop(watch);\r\n          }\r\n        });\r\n      }\r\n    }*/\r\n    let finalWatchArray = filteredList.map(watch => {\r\n      return (\r\n        <li>\r\n          <Ridewatch\r\n            imgsrc={watch.imagesource}\r\n            alt={watch.name}\r\n            identity={this.props.katakana ? watch.katakana : watch.name}\r\n            year={watch.year}\r\n            id={watch.id}\r\n            key={watch.id}\r\n            series={watch.series}\r\n            checked={this.state.Checked}\r\n            ridewatchClick={this.props.ridewatchClick}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    this.setState({ displayWatches: finalWatchArray });\r\n  }\r\n\r\n  ridewatchSearcher() {\r\n    let ridewatches = this.state.searchResult;\r\n    return ridewatches;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.series + \"-div\"}>\r\n        <h1 onClick={this.onClick} className={\"search-header\"}>\r\n          Search\r\n        </h1>\r\n        <div className=\"parameters-container\">\r\n          Owned\r\n          <select\r\n            name=\"Owned\"\r\n            id=\"ownedSelect\"\r\n            className=\"colorSelector\"\r\n            onChange={this.handleOwnedChange.bind(this)}\r\n          >\r\n            <option value=\"all\">both</option>\r\n            <option value=\"owned\">Owned</option>\r\n            <option value=\"notOwned\">Not Owned</option>\r\n          </select>\r\n          <textarea\r\n            id=\"searchBar\"\r\n            placeholder=\"Rider Time\"\r\n            onChange={this.handleNamedChange.bind(this)}\r\n          />\r\n          Primary Color:\r\n          <select\r\n            name=\"primary\"\r\n            id=\"primaryColorSelect\"\r\n            className=\"colorSelector\"\r\n            onChange={this.handlePrimaryChange.bind(this)}\r\n          >\r\n            <option value=\"all\">all</option>\r\n            <option value=\"red\">red</option>\r\n            <option value=\"pink\">pink</option>\r\n            <option value=\"yellow\">yellow</option>\r\n            <option value=\"blue\">blue</option>\r\n            <option value=\"dark blue\">dark blue</option>\r\n            <option value=\"green\">green</option>\r\n            <option value=\"gold\">gold</option>\r\n            <option value=\"silver\">silver</option>\r\n            <option value=\"purple\">purple</option>\r\n            <option value=\"orange\">orange</option>\r\n            <option value=\"black\">black</option>\r\n            <option value=\"aurora\">aurora</option>\r\n            <option value=\"white\">white</option>\r\n            <option value=\"grey\">grey</option>\r\n            <option value=\"clear\">clear</option>\r\n            <option value=\"mustard\">mustard</option>\r\n          </select>\r\n          Secondary Color:\r\n          <select\r\n            name=\"secondary\"\r\n            id=\"secondaryColorSelect\"\r\n            className=\"colorSelector\"\r\n            onChange={this.handleSecondaryChange.bind(this)}\r\n          >\r\n            <option value=\"all\">all</option>\r\n            <option value=\"red\">red</option>\r\n            <option value=\"yellow\">yellow</option>\r\n            <option value=\"purple\">purple</option>\r\n            <option value=\"pink\">pink</option>\r\n            <option value=\"blue\">blue</option>\r\n            <option value=\"orange\">orange</option>\r\n            <option value=\"green\">green</option>\r\n            <option value=\"black\">black</option>\r\n            <option value=\"gold\">gold</option>\r\n            <option value=\"silver\">silver</option>\r\n            <option value=\"white\">white</option>\r\n            <option value=\"grey\">grey</option>\r\n            <option value=\"mustard\">mustard</option>\r\n            <option value=\"magenta\">magenta</option>\r\n            <option value=\"cyan\">cyan</option>\r\n            <option value=\"maroon\">maroon</option>\r\n            <option value=\"brown\">brown</option>\r\n          </select>\r\n          DX\r\n          <select\r\n            name=\"DX\"\r\n            id=\"dxSelect\"\r\n            className=\"colorSelector\"\r\n            onChange={this.handleDXChange.bind(this)}\r\n          >\r\n            <option value={null}>both</option>\r\n            <option value={true}>DX</option>\r\n            <option value={false}>GP</option>\r\n          </select>\r\n          <button id=\"submitButton\" onClick={this.searchClick.bind(this)}>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className={\"search-background\"}>\r\n          <div className={this.state.series + \"-div\"}>\r\n            <ul className=\"searchList\">{this.state.displayWatches}</ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import Checklist from \"./Checklist\";\r\nimport Search from \"./Search\";\r\n\r\nconst mainRoutes = [\r\n  {\r\n    path: \"/checklist\",\r\n    name: \"Checklist\",\r\n    icon: \"checklist-icon\",\r\n    component: Checklist,\r\n    page: Checklist\r\n  },\r\n\r\n  {\r\n    path: \"/search\",\r\n    name: \"Search\",\r\n    icon: \"search-icon\",\r\n    component: Search,\r\n    page: Search\r\n  },\r\n  { redirect: true, path: \"/\", to: \"/checklist\", name: \"Checklist\" }\r\n];\r\n\r\nexport default mainRoutes;\r\n","export default __webpack_public_path__ + \"static/media/test.7497f3af.png\";","import React, { Component } from \"react\";\r\nimport imagine from \"./ridewatch/test.png\";\r\nimport mainRoutes from \"./MainRoutes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + imagine + \")\"\r\n    };\r\n\r\n    return (\r\n      <div\r\n        id=\"sidebar\"\r\n        className=\"sidebar\"\r\n        data-color=\"black\"\r\n        data-image={imagine}\r\n      >\r\n        <div className=\"sidebar-background\" style={sidebarBackground} />\r\n        <div style={{ height: 105 }} className=\"logo\">\r\n          <div>\r\n            <img\r\n              src={this.props.logo}\r\n              height={90}\r\n              alt=\"logo_image\"\r\n              onClick={this.props.languageClick}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"sidebar-wrapper\">\r\n            <ul className=\"nav\">\r\n              {mainRoutes.map((prop, key) => {\r\n                if (!prop.redirect)\r\n                  return (\r\n                    <li className={\"sidebar-list-item\"} key={key}>\r\n                      <NavLink\r\n                        to={prop.path}\r\n                        className=\"nav-link\"\r\n                        activeClassName=\"active\"\r\n                      >\r\n                        <i className={prop.icon} />\r\n                        <p>{prop.name}</p>\r\n                      </NavLink>\r\n                    </li>\r\n                  );\r\n                return null;\r\n              })}\r\n            </ul>\r\n            <div>\r\n              <p id=\"totalText\">Total Owned: {this.props.totalOwned}/177</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/Japanese-logo.9f7fbd11.png\";","export default __webpack_public_path__ + \"static/media/ZioEnglishLogo.4d929478.png\";","import App from \"./App\";\r\n\r\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: App }];\r\n\r\nexport default indexRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport mainRoutes from \"./MainRoutes\";\r\nimport Sidebar from \"./Sidebar.jsx\";\r\nimport Header from \"./components/Header.jsx\";\r\nimport Footer from \"./components/Footer.jsx\";\r\nimport \"./App.css\";\r\nimport JapaneseLogo from \"./ridewatch/Japanese-logo.png\";\r\nimport EnglishLogo from \"./ridewatch/ZioEnglishLogo.png\";\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      katakana: false,\r\n      language: \"English\",\r\n      logo: EnglishLogo,\r\n      totalOwned: \"\"\r\n    };\r\n    this.languageClick = this.languageClick.bind(this);\r\n  }\r\n\r\n  languageClick() {\r\n    if (this.state.katakana === false) {\r\n      this.setState({\r\n        katakana: true,\r\n        language: \"Japanese\",\r\n        logo: JapaneseLogo\r\n      });\r\n    } else {\r\n      this.setState({\r\n        katakana: false,\r\n        language: \"English\",\r\n        logo: EnglishLogo\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ totalOwned: localStorage.length.toString() });\r\n  }\r\n\r\n  ridewatchClick() {\r\n    this.setState({ totalOwned: localStorage.length.toString() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Sidebar\r\n          {...this.props}\r\n          katakana={this.state.katakana}\r\n          languageClick={this.languageClick}\r\n          logo={this.state.logo}\r\n          totalOwned={this.state.totalOwned}\r\n        />\r\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\r\n          <Header {...this.props} />\r\n          <Switch>\r\n            {mainRoutes.map((prop, key) => {\r\n              if (prop.redirect)\r\n                return <Redirect from={prop.path} to={prop.to} key={key} />;\r\n              return (\r\n                <Route\r\n                  path={prop.path}\r\n                  key={key}\r\n                  render={props => (\r\n                    <prop.page\r\n                      {...props}\r\n                      katakana={this.state.katakana}\r\n                      ridewatchClick={this.ridewatchClick.bind(this)}\r\n                    />\r\n                  )}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport indexRoutes from \"./indexRoutes.jsx\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Switch>\r\n      {indexRoutes.map((prop, key) => {\r\n        return <Route to={prop.path} component={prop.component} key={key} />;\r\n      })}\r\n    </Switch>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}